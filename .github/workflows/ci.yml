name: CI

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          pytest src/tests

  deploy:
    needs: tests
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build bundle (zip)
        run: git archive -o package.zip HEAD

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Sanity check SSH (whoami)
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" "whoami"

      - name: Copy bundle to Windows
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" scp -P "${PORT:-22}" -o StrictHostKeyChecking=no -v package.zip "$USER@$HOST:~/labo0.zip"

      - name: Remote deploy on Windows (PowerShell)
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
          APP_DIR: ${{ secrets.DEPLOY_APP_DIR }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" powershell -NoProfile -ExecutionPolicy Bypass -Command "
            \$app = if ('${APP_DIR}' -ne '') { '${APP_DIR}' } else { \$env:USERPROFILE + '\apps\labo0' };
            New-Item -ItemType Directory -Force \$app | Out-Null;
            if (Test-Path \$env:USERPROFILE\labo0.zip) { Remove-Item \$env:USERPROFILE\labo0.zip -Force };
            Move-Item \$env:USERPROFILE\labo0.zip \$app\labo0.zip;
            if (Test-Path \$app\*) { Remove-Item \$app\* -Recurse -Force -ErrorAction SilentlyContinue };
            Expand-Archive -Path \$app\labo0.zip -DestinationPath \$app -Force;
            if (Get-Command py -ErrorAction SilentlyContinue) { py -3.11 -m venv \$app\.venv } else { python -m venv \$app\.venv };
            & \$app\.venv\Scripts\python.exe -m pip install --upgrade pip;
            & \$app\.venv\Scripts\pip.exe install -r \$app\requirements.txt;
            & \$app\.venv\Scripts\python.exe \$app\src\calculator.py addition 2 3;
            Write-Host 'Deploy OK -> ' \$app
            "