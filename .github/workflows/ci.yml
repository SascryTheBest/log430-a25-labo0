name: CI

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          pytest src/tests

  deploy:
    needs: tests
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Sanity check SSH
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" "whoami"

      - name: Copy deploy script + temp PAT file
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
          PAT:  ${{ secrets.REPO_PAT }}   # <-- your secret (not starting with GITHUB_)
        run: |
          sshpass -p "$PASS" scp -P "${PORT:-22}" -o StrictHostKeyChecking=no -v scripts/deploy_git_pull.ps1 "$USER@$HOST:~/deploy_git_pull.ps1"
          printf '%s' "$PAT" > pat.txt
          sshpass -p "$PASS" scp -P "${PORT:-22}" -o StrictHostKeyChecking=no -v pat.txt "$USER@$HOST:~/pat.txt"
          rm -f pat.txt

      - name: Run deploy (git clone/fetch/reset on Windows)
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" \
            'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -ExecutionPolicy Bypass -File "C:\Users\Assal\deploy_git_pull.ps1"'
