name: CI

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          pytest src/tests

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Sanity check SSH
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" "whoami"

      - name: Copy deploy script + temp PAT file
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
          PAT:  ${{ secrets.REPO_PAT }}     # <-- ICI on utilise REPO_PAT (pas GITHUB_PAT)
        run: |
          # script de déploiement
          sshpass -p "$PASS" scp -P "${PORT:-22}" -o StrictHostKeyChecking=no -v scripts/deploy_git_pull.ps1 "$USER@$HOST:~/deploy_git_pull.ps1"
          # token temporaire dans ~\pat.txt (lu puis supprimé par le script)
          printf '%s' "$PAT" > pat.txt
          sshpass -p "$PASS" scp -P "${PORT:-22}" -o StrictHostKeyChecking=no -v pat.txt "$USER@$HOST:~/pat.txt"
          rm -f pat.txt

      - name: Run deploy (git clone/fetch/reset on Windows)
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" ^
            powershell -NoProfile -ExecutionPolicy Bypass -File "$env:USERPROFILE\deploy_git_pull.ps1"

      - name: Show deployed HEAD (optional)
        if: always()
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PASS: ${{ secrets.SSH_PASSWORD }}
          PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" ^
            powershell -NoProfile -Command "Get-Content 'C:\Users\Assal\apps\log430-a25-labo0\DEPLOY_SHA.txt'"
